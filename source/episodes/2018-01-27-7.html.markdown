---
id: 7
title: Work-life or non-tech balance - Is it worth the hype?
date: 2018/01/27 03:00:00PM
audio_file_name: cto_think_episode_0007.mp3
soundcloud_id: 390086538
soundcloud_link: 'http://feeds.soundcloud.com/stream/390086538-cto-think-episode-7-how-important-is-a-strict-work-life-balance.mp3'
guid: 'http://feeds.soundcloud.com/stream/390086538-cto-think-episode-7-how-important-is-a-strict-work-life-balance.mp3'
duration: '00:39:56'
file_size_bytes: 46488970
file_type: audio/mpeg
keywords: cto, technical manager, self-learning, work-life, non-tech, balance, 9-to-5
short_description: Discussion about work-life balance and learning new skills on personal time
explicit: no
block: no
published: true
featuring: 'Randy Burgess, Don VanDemark'
---
We discuss the importance of a work-life or non-tech balance for someone building a career in technology. Do folks need to set aside a specific amount of time, or any at all, not working on things related to their job?
READMORE

#### Notes

* We've launched a Patreon campaign to raise funds for per-episode transcripts.
* Some people feel the need to adhere to a strict 9-to-5.
* The source of the rigid 9-to-5 work-life balance theories are important to consider.
* Wealthy folks, or folks that have already "made it" may have a different perspective than folks trying to now launch a company.
* Do the people touting a balanced philosophy, now, did they follow that same philosophy when they were working their way up?
* People that have mastered a craft may not have a lot more to learn.
* The work/life philosophy out of Silicon Valley stems from the investor/investee relationship and expectations.
* The strictly 9-to-5 philosophy can feel very restraining to some people.
* If a person has the goals to be in an innovative field, to make more money, and to manage more people, and their philosophy is strictly a 9-to-5 learning program, good luck to that.
* The life constraints that people face: multiple jobs, debt, family, health, all weigh on a person's ability to focus on learning outside of a standard workday timeline.
* Don recommends a book named [Shadow Divers, by Robert Kurson]("https://www.amazon.com/gp/product/0739320831/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0739320831&linkCode=as2&tag=allaboardapps-20&linkId=7e895f36f4a157b186fc9d0f506cddd3")
* Randy recommends a newsletter called [SoftwareLeadWeekly, publised by Oren Ellenbogen](https://www.softwareleadweekly.com)

#### Links

* Don's Recommended Read: [Shadow Divers: The True Adventure of Two Americans Who RIsked Everything to Solve One of the Last Mysteries of World War II]("https://www.amazon.com/gp/product/0739320831/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0739320831&linkCode=as2&tag=allaboardapps-20&linkId=7e895f36f4a157b186fc9d0f506cddd3")
* Randy's Recommended Read: [SoftwareLeadWeekly](https://www.softwareleadweekly.com)
* Patreon: [CTO Think Podcast is creating Episode Transcripts for Accessiblity](https://www.patreon.com/ctothink)

#### Closing

Thanks for listening to the [CTO Think](https://www.ctothink.com) Podcast. If you liked what you heard, please share a link to the podcast with your friends.  

Reviews on Apple iTunes are always appreciated and help us spread the word about the podcast.  

Show music is Dumpster Dive by [Marc Walloch](http://marcwalloch.com/), licensed by [PremiumBeat.com](https://www.premiumbeat.com)  

Shownotes and previous episodes can be found on our website at [www.ctothink.com](https://www.ctothink.com/)  

For questions, comments, or things you'd like to hear on future shows, please email us at [hello@ctothink.com](mailto:hello@ctothink.com)  

For notifications of future episodes, please sign up to the CTO Think newsletter on [www.ctothink.com](https://www.ctothink.com/)  

We'll keep talking next week!

#### Transcript

Intro: Welcome to CTO Think, a podcast about leadership, product development, and tech decisions between two recovering Chief Technology Officers. Here are your hosts, Don VanDemark and Randy Burgess. 

Don VanDemark: Randy, what's going on in your world this week? 

Randy Burgess: Nothing too big. I think my challenge of the week is dealing with APIs. What's more interesting is more on the human side of the API than it is on the tech. I'm working with a company on behalf of a client, and trying to get information about a semi-documented API that is not responding back consistently with what is expected. It's proving to be a challenge because the folks supporting it don't seem to have a clear technical leader or point person to talk to. I'm having to do lots of different email communications between the client and his contact.

What is more than clear to me with having a product that has to interface with outside APIs is that there are two facets of support, technical and people, that are still necessary, and that dependency is something that you really have to look at for how your product may depend on an outside company, product team, or whatever. That's just something that came up. I've also been learning a little bit about GraphQL, the new API, kind of paradigm approach. Even if I do like that newer system versus REST, like a RESTful API, there's still that people part that doesn't change. This week, it hasn't been hard. I've been making progress, but that's been the challenge of the week so far. How about you?

Don VanDemark: Sure. Sure. That's all interesting, because that doesn't necessarily flow into what I've been doing this week, but it's something that I've been having to look forward to, and I do mean having to look forward to. The work we do with Construction Specialties, we use a number of different systems. One of the systems we use has an API, or I've been told it has an API. I requested access for it, and the response back I got was, "You're not big enough. We don't want you to use it because you're not big enough." I'm like, "Wait a minute. I'm not sure that makes sense. Maybe it makes sense to you, but it doesn't make any sense to me."

Then one of the other systems, I had to ask a non-technical person to hook me up with their IT department, and I'm still having trouble getting that access in order to see if they even have an API, because if they don't have an API, then I can't tie the systems together, or the subject of screen scraping comes up and you have to decide whether ... You have to look at the robots.txt file and all that to see if you can even do that. Anyway, it was interesting that you brought up APIs, because that's something I'm going to be wrestling with very shortly.

Randy Burgess: Well, it goes to show, just like I keep telling students of technology, people that I've taught or I'm being introduced to that are newbs to the whole system, this is a tech job. What you're trying to do is still technically-based, but people are still a huge part of it. I think what you ran into was policy, but it's still people that choose the policies and enforce them. You still have to be able to communicate with people, work with people, get past people to get things done. It's not just about zeroes and ones.

Don VanDemark: Right. We do a decent job here of talking about things we're going to talk about in future episodes. I think we might have to come back to this at some point and just wrap a whole subject around technology working with non-technical companies, because that's easily the case I've got here. I've got stories that I can bring from my past as far as that goes. We'll get into that another time.

This week, what I wanted to ask you about was, going back to the whole idea of anti-fragile and things like that, one of the ways I feel that I've made myself somewhat anti-fragile is I'm always out there learning new stuff, figuring out new things. I'm not an expert by any stretch of the imagination, but I make something work, and then I at least have the knowledge of, "Okay, I understand some of what's going on here, so I can speak above just a basic level."

There seems to be a call to movement. That's a strong word, but there seems to be a movement towards technical people need to stop doing their technical jobs after 5:00. They need to do nine-to-five technical, and then the rest of their life needs to be non-technical, away from coding, away from ... I'm going to use my trademarked phrase here. It depends, because I find myself ... I find it very hard for me to do that on a consistent basis. Certainly, we'll go off and do non-technical things, but I'm always drawn back to technical things. I'm not going to call it work-life balance. I'm going to call it tech, non-tech balance. What is your personal tech, non-tech ratio, and do you find yourself varying it from time to time?

Randy Burgess: Well, I guess let me back up a little bit to the actual argument, because I think some people take nine-to-five literally. I see people, whenever the debate comes up, they get worked up about nine-to-five. People are like, "I work better past 6:00 or 7:00." I'm like, "That's not what we're talking about." I think it's about self-awareness of your energy and burnout prevention more than anything else, and maybe knowing when you're at your peak, because there's people like I can ... My personal wavelength of technical energy and learning can go for three days straight of just barely eating and drinking, and just being ultra-focused, and then I need definitely a day off. In the past, I didn't do very well. When I was younger, I didn't do very well regulating it. I think now I've started to notice when I'm not ... Nothing's sinking in or I'm watching something or reading something, and I'm drifting off in a different thought pattern.

Personally, my focus levels for working and doing things starts around later in the day, like later to most people, maybe like 10:00 AM, and then can go usually to 7:00 or 8:00 if it's strictly work-related. If it's project-related, then I have to shut things down much earlier, because it's something I'm interested in trying to do. It doesn't stick to a daily routine. Last night, I remember I was working up to about 8:00, and I just yelled to Megan, "I'm done." I don't remember what it was. Maybe I just got something to work. I'm like, "I'm done with this," like, "I don't need to do anything else tomorrow, can take a rest." I think I start to feel the signs of, "I don't want to be sitting here anymore," and I really just need to get this done, or I just need to cut it so that I have energy tomorrow to keep going. That's how it works for me right now.

Don VanDemark: Sure. What I'm also talking about is the concept of improving yourself outside of work hours. We've got kind of what you talked about, which is kind of the circadian rhythm that you go in as far as work every day. It varies from day to day. I know just in the past week, there have been days I've been sitting here at 1:00 AM coding. I am one of those people that codes better from about 10:00 PM to 1:00 AM. I'm sitting here way after hours coding stuff, but the argument I think I see a lot of is, "I don't need to spend my personal time, my free time, improving myself. My job is what's going to help me improve myself."

I find that limiting. (A) You've got to have a super understanding job and management structure and all that that they're even going to give you time to learn stuff that's not related to your specific job. If you're not out there doing stuff that's not related to your specific job, you're not growing. It's that simple. I find the concept ... I'd like to know where this concept is coming from that people feel they don't need to be growing outside ... and I've met people like this. If that's the lifestyle they want to live, I'm not going to judge how they want to live their life, but it's just so different to the way I've been doing things. What do you see?

Randy Burgess: I think you got to look at the source of the statement, because I feel like when I hear it from certain people, there are certain well-known social media personalities that really do tout this stuff a lot. Philosophically, people burning out and taking a break, or taking a break to prevent burnout, is not a bad thing. I'm not going to say that these people have a bad philosophy, but if they are wealthy and have kind of made it in their sector, then yeah, of course, now you can start to sit back and smell the roses, so to speak. If you're driving to get yourself solid, build retirement, pay for kid's college, family, get your company, your startup lifted off the ground, making revenues, paying your employees, making payroll at the end of the month, you have a much different perspective than that person that has already gone through the process of doing that and is now talking about, "Oh, I don't work past 5:00."

Well, yeah, but when you built that product, were you really on that nine-to-five? That's what I want to ask that person, because if they were, then cool, they're speaking from the entire ... from the day that they started the product or the company to now. But what I want to know is, knowing what I know in terms of how hard it is to build products that last, did you really follow that at the beginning, before you ... Because there's one specific person. 37signals is a company who I do like their philosophies. I think the way that they talk to companies about this type of stuff is a big deal, but I don't know that they followed back then when they were starting what they follow now. It's just a matter of you have to take it with ... You have to consider this philosophy from the person touting it based on where they were when ... where you are in their time span, timeline, and where they are now, because I think it's really easy when you have all the money you need, and the company with the revenues and the employees doing things for you. That's a much different thing.

Going back to your specific point of self-improvement, if you've already mastered a craft, there may not be a ton more you need to self-improve on. You may be on autopilot, because you've done so much and you're the master of it. You're doing other things. Maybe you're racing cars. You're learning how to ... Boats is your thing. I don't know. You got a hobby now, because you can afford to do that. You're not driving for something. I can say that, for me, I keep doing self-learning, because I see so many things I want to learn and I haven't made it in the sense of I don't have to worry about retirement, I don't have to worry about healthcare, salary is taken care of. None of those things are like ... I'm managing them now, but they're not something that if I just sat back on a beach for the next year, I'd be like, "Oops, I should have been making some money." Who that person is saying that, I want to know where they are in their career, their timeline, and how far they've reached.

Don VanDemark: It all comes down to a balance as well, because I do not ... I also don't subscribe to what's essentially the opposite of this argument, which is there is a segment of ... I'll even say it's a segment of Silicon Valley that is if you're an entrepreneur, you live, breathe, eat, drink your product 24 by seven. You don't stop until you've made it. That goes to the other extreme, which I don't think is healthy and I certainly don't think is sustainable, and makes for poor decisions as well. I think there's a balance, and it is personal. There are people who want to do those things, just like there are people who want to be entrepreneurs and have the makeup to be an entrepreneur, and that's not saying that those that don't are lesser people. They just have different personality traits that allow them to be different type of business people, allow them to be stronger in other places.

Randy Burgess: The Silicon Valley perspective comes from venture capitalists. [crosstalk 00:16:11]. If you hand over a couple million or less, any amount of money you send someone, the philosophy in Silicon Valley is driven by, "Hey, we gave you a pile of cash. Now make us more money off of it." The thing is, instead of it being a philosophy from, "Hey, you had an employer who drives you hard," it's this entire community that represents Silicon Valley's money system saying, "Hey, entrepreneurs. If you take money from us, we want you 100% focused on everything. We don't care about family life, real estate pricing, anything. We want you 100% focused on what we hired you to do." No one considers it being hired, but you've been hired to make someone 10 times their investment. That comes from the source of that money, and so that philosophy, it's termed a philosophy but it's really just the age-old adage of, "You work for me. I don't want you focused on anything else." That's how I see the Valley's opinion of it, which if you sign up for it, great. Just know that's what you're getting into when you take that cash.

Don VanDemark: Yeah. This just buttresses your point about where people came from, because usually those venture entrepreneurs did that previously. Those venture capitalists are prior entrepreneurs who did live and breathe whatever product they grew to make their money, to be venture capitalists. They expect that same from whomever they're giving money to. Yeah, so I think we've come down to, (A) there's a balance there and each person has to find where their balance is, and I just come back to the point ... What bothers me the most about that philosophy, going back to the original question, the philosophy around, "I don't need to do more than my job," is it's so constraining.

This is something I actually personally feel, because I have been the manager of really intelligent people. They know one or two things, and it's not like they're masters of those one or two things, which I even think, if you're a master of something, you need to go find something else to learn, because you need different perspectives. They know their thing. They're making a decent enough living that they're comfortable with, so they feel, and this is people within big monolithic enterprise companies as well, they feel they're safe. They've got their salary. They can just ride this out for the next 20, 30 years. That's just not the way the world works right now. That salary, that job, is vulnerable, and you have to control your own destiny. If you don't expand what you know, you're not controlling your destiny. You're letting it come to you. You're making yourself fragile-

Randy Burgess: Well, that's-

Don VanDemark: ... so you're not being anti-fragile.

Randy Burgess: Yeah. I would say that my learning, what I choose to focus learning time on, which I do all the time and I always have, is in a way a hedge against the rapidly-changing environment of technology. If I was still doing what I started out doing 20 years ago, I would be doing ASP.NET, ASPX, or whatever the ... I don't even know what they use now on the Microsoft side from back-end stuff, and/or PHP and Drupal was the content management system. Once I said, "You know what, I'm frustrated with these tools. This Rails stuff looks more interesting," that's when I started dabbling in Rails. Five years later, I opened up huge doors with better productivity and learning more development, because I was doing the slight hedge on the side of learning new tech.

Now, I'm at the same point right now with Rails that I was back then, because I look at these new tools, pretty much like Node and JavaScript-only back-end, front-end frameworks. I look at Elixir and Phoenix for another, like the kind of possible replacement for Rails, Go, all these different frameworks that are built more on modern tech ... or more modern tech and speed is kind of their bigger focus. I'm not totally sure. Even when I'm building the new HOA Done prototype, I'm still using Rails. Why? Because I build really fast in it, but I'm still ... To your point, things change so fast, and the whole industry will break.

Now, it's like I have to make sure I've got a backup plan. That's just my personality. I want to have the little things in the background of like, "Okay, the long-term for what I know now is not going to last, but I've been paying attention and I can quickly jump on the new trend." You have to be careful, because you can definitely jump on a trend that dies really quick, but for me, I'm only comfortable doing that. I'm not comfortable saying, "I'm just a Rails developer," and that's it. I can't do that, plus the fact that I have to manage people that know things that I don't. I have to understand something that they know, which is kind of where the CTO, the tech manager, responsibilities are in place. Sure, you can hire everything out, but if you don't have any knowledge of what that person's doing, they better be good. They better be able to deliver, because you are kind of hamstrung if they don't.

Don VanDemark: This kind of ties back to last week as well. There was a period of my career where I was handed an assignment to manage a group of technical professionals supporting a company's SAP instance. I knew nothing about SAP. It was foreign to me. All the technology was foreign to me. The methodologies were not something I was used to. It's a whole way of thinking that if you're not in that space, you don't have that knowledge. I did poorly. That did not go well. I managed the people as best I could. I identified once I got there, I was like, "I'm way out of my depth here, as far as technical. I cannot even have an intelligent conversation about the technical side of this, so I need to manage the people, see if I can figure out who I can lean on to learn things from, and make the best of it."

Fortunately, that was a short assignment. I was a transition manager in that case, so I did my three months and I was out. From that moment on, if they even approached me with an SAP assignment, I said, "That's probably not best for me," just because it ... Yes, if you want me to go spend time learning it, I will go do that. It holds no interest for me though, so I'm going to be trying to learn something that holds no interest for me.

Randy Burgess: You did learn something-

Don VanDemark: I lucked out-

Randy Burgess: You did learn something about SAP. You don't ever want to do it again.

Don VanDemark: I'll tell you. I don't even know enough about the product or anything to even say it. It does wonderful things, I'm sure.

Randy Burgess: That's a nice way of [crosstalk 00:24:59].

Don VanDemark: If they're listening and they want to be a future sponsor, we'll take it.

Randy Burgess: It makes people money. I do know that. That's as much as I [crosstalk 00:25:05].

Don VanDemark: Oh, for sure, for sure. Really, I wanted to bring that up today because it's been gnawing at me. It's been gnawing at me for years, because like I said, I know people that I'm like, "You could be so much better. I'm not going to pass judgment on your life decisions, because you've decided that it is much more important at every stage of your career to only spend your eight hours of work. If that's what you want to do, go do that. I'm happy for you. I just know you can be so much more."

Randy Burgess: Well, so I guess the rub is, if this person that has that philosophy tells you, "I want to be a CTO. I want to be in a brand new, innovative technology system. I want more money. I want to have more responsibility," if those are the goals that that person has in our field, in a technology-based product company, whatever, and then they still have that attitude of, "I'm going to do my nine-to-five, my set amount of time, and I'm not going to invest time on my own elsewhere," I would say, "Good luck with that philosophy in our field," because our field is drastically changing so much. I'm not going to hire them for a role that I need innovative thinking and learning on the fly, so that's ... I would say that you are limiting, that person is limiting their opportunities, based on what my knowledge of the industry is.

If their philosophy is, "I like to," for whatever my outside interests are, let's say family, raising horses, race car driving, what have you, and they're like, "I don't really care. I'll do what I'm paid to do, and that's all I really care to do. I'll deal with later if my position becomes obsolete or the tech I'm working on is obsolete," and they're fine with that, they can live comfortably and happily like that, that's great, because in some cases, I want to hire people. Just do this one thing for me consistently all the time, and that's all I need you for. I don't really have a problem with that. I don't relate to it very well. That's the difference for me, but it depends. So many times I hear from people, "I want to be in this cutting-edge, innovative space. I don't go home and learn things on my own," I'm just like, "Well, that's not how I've seen it work very well." It's about motivations and goals, I think, to some extent for some people.

Don VanDemark: For those who are younger than you and I, just a fair warning that as you age, your attention span, your ability to retain information, does go down. Your learning speed does go down. I know that it's certainly affected me to some degree is I'm probably not as fast a learner today as I was 20 years ago. Now, I can use some of my experiences to learn things faster. When I went back to get my MBA, I was a incredibly much better student than when I was getting my bachelor's degree. There is that sweet spot right there in, I think, the 30s that is probably your prime time for learning, maybe late 20s and 30s, which is your prime time, because you've got enough life experience to figure out how you learn, and you've still got the energy. You get up a little bit higher, and some of that starts to deteriorate. The synapses don't fire as fast.

Randy Burgess: I agree with you. Definitely from the physical brain power, mental retention side, I totally get that. The difference for me now is I think either experience, prior knowledge, what have you, I am more efficient with learning, because I recognize those boundaries, those constraints, and I don't pay attention or refocus or try to retain more than I can. I actually have been learning things faster, because I'm only focusing on the important parts, realizing I'm going to forget this part anyway. I just want to have the confidence, like on the GraphQL thing, there's a whole section of what I'm learning about the setup. I'm like, "You know what, by the time I actually start using GraphQL, this setup part is not going to be relevant," because they've already talked about the new version coming out in a few months. I'm like, "Okay, I'll understand what they're talking about, but I'm going to skip this as a 'I need to spend a lot of time.'" I've got the video that I'm watching going at like 1.5 or two times speed.

If you were to say, "Write out this config file right now as part of having learned this," I'd be like, "I don't know. I have to look it up again." But if I told you what this technology means for us to move forward with it, I've learned a ton in just the last few weeks on this subject. I think in the past, I would try to read every book, watch every video, retain it, practice it, all that stuff, and now, I think I've shortened my learning that I know what I need to do to a much smaller timeline, because I'm like, "The brain won't retain every detail. I need to have a very cursory understanding of this at this point. I should understand this more in depth at this point." At some point, I can say, "All right. Next time I need to learn this will be when I'm using it."

Being able to do that allows me to learn so many more new things, rather than think, "I need to do freaking three months of GraphQL to be an expert in it." That's where age and experience has changed the learning side for me is becoming more efficient at it. I would agree with someone that says, "Well, I do need to learn, but I don't need to learn as in-depth as people think I need to learn." I could totally catch on to that philosophy in a heartbeat.

Don VanDemark: Well, especially if you're not trying to execute right now. If you're doing it to learn the technology, learn the paradigm, you're absolutely right. You don't need to learn the setup and a lot of that stuff, because by the time you go to execute it down the road, you're going to have to pull somebody else's new config file or whatever to keep up with the times. I do want to add one caveat that I think we need to ... Just to throw it out there, make sure that we see all perspectives, obviously this doesn't apply to everyone, right? Someone who's got to go out there and work two jobs in order to put food on the table for their family, absolutely, I've been there. I've been there where you have to be constantly earning money in different ways to just put food on the table. That was in the middle of raising a family, so you got to take your time out for your family and all that.

There are caveats, absolutely. I will say that the way I approached it, and this isn't possible for everyone, but the way I approached it is when I went and tried to get that second job or that second and third stream of income, I tried to make it in something that I was learning or growing in. To some degree, that's how you and I met, and because I was out there putting something out there, and it was something you needed at that moment. There are caveats around that, and not a one size fits all.

Randy Burgess: I agree with that 100%.

Don VanDemark: Cool. Thank you. I feel lighter. I feel I got all that off my chest, and the years of that weighing on me are gone now.

Randy Burgess: Well, it was definitely a good subject that comes up frequently in other people I talk to. I'm pretty sure the work-life balance issue in this industry will not change for a while, in terms of being a debate. There's so much going on in technology that focus and time management is going to be a challenge. Yeah, I think it's a great subject. We can wrap this up. We're going to try to do a new segment at the end. This is kind of common amongst a lot of shows. Recommendations, do you have a recommendation or recommended read for the listener that they can maybe check out? We'll put it in the show notes.

Don VanDemark: Sure. As you know, as you personally know, I consume a lot of books. For a few years, I was trying for 52 books a year. Some years, I would make it. Some years, I wouldn't. I don't believe in abridged books. I think if you're going to read something, you got to read the whole of it. What I'm trying to focus on this year is I may not make my 52, but my 52 is usually about 80 to 90% fiction and the rest nonfiction, which fiction's a lot faster to read. You can skim faster and still pick up all the points. Nonfiction is a little slower, so I'm going to try and pick up some nonfiction books.

One I was recommended to read was a book called Shadow Divers. It's by Robert Kurson, K-U-R-S-O-N. It's about wreck divers, so people who go and dive on wrecks. This particular one was about the set of wreck divers who happened upon a wreck that it took a little while to identify. They finally identified it was a submarine, and not only a submarine, but a German submarine in New England waters where there were no recorded battles of a sunk German sub during World War II.

A lot of the book was about the technical part of the diving. They were going to depths that were right at the edge of what humans can do with the equipment they had at the time. This was in the '90s. Some of it was they turned into historians. They went to Washington and dove into the Naval Archives. They went to Germany, talked to people over there, trying to identify this submarine, because it had no identifying markers. They couldn't get to all parts of the submarine and find things that could identify it. It was a fascinating book. What do you have?

Randy Burgess: I'm going on the business side of stuff. I like to use aggregators to bring me information. There's a lot of people out there that go out and harvest links to different blog posts of the week. I just subscribe to a ton of those, because I can go through their work, having gone ahead of me and finding articles that are worthy. It's faster for me to do that than to go through a feed reader and just find stuff on my own. The one that's very relevant to, I think, what we're talking about week-to-week is Software Lead Weekly. We'll put the domain in the show notes. It's by, I think, a guy that is in Tel Aviv. Oren Ellenbogen I think is his name.

All he does is he finds a bunch of more managements ... technical management-related links, some humorous, some educational. A lot of them are very good. He also wrote a book that I can talk about in the future that is helpful for people moving up into the tech management role. I think Software Lead Weekly is a really good source of technical management-related posts out on the internet that people can read. I recommend it as something for people to subscribe to and check out in the future.

Don VanDemark: Yeah, that's really good. That's really a good, good choice.

Randy Burgess: All right. Well, I think we can wrap it up. Good talking to you, and we will talk next time.

Don VanDemark: Sounds good. Thank you. Have a good week. [crosstalk 00:39:00].

Closing: Thanks for listening to the CTO Think podcast. Show notes and previous episodes can be found on our website at ctothink.com. Reviews on Apple iTunes are always appreciated and help promote the show. Patreon contributions help us to produce episode transcripts, which allow people that are deaf or hard of hearing to access the show. If you have feedback, ideas, or want to be a guest, please email us at hello@ctothink.com. Show music is Dumpster Dive by Marc Walloch, licensed by premiumbeat.com. Voiceover work by meganvoices.com. You'll hear from us next week.
